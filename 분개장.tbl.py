# import the Fraudit libraries
from fraudit import *

# import commonly-needed built-in libraries
import string, sys, re, random, os, os.path
# import data handling libraries
import pandas as pd
import numpy as np

항목별_테이블 = Grouping.stratify_by_value(유형자산_기초정보, 0, "항목")

for i in range(len(항목별_테이블)):
    for j in range(항목별_테이블[i]['내용연수'][0]):
        if j == 0 :
            항목별_테이블[i]['감가상각대상금액'][0] = 항목별_테이블[i]['취득원가'][0]- 항목별_테이블[i]['잔존가치'][0]
            항목별_테이블[i]['상각률'][0] = 1/항목별_테이블[i]['내용연수'][0] 
            항목별_테이블[i]['감가상각비'][0] = 항목별_테이블[i]['감가상각대상금액'][0] * 항목별_테이블[i]['상각률'][0]
            항목별_테이블[i]['감가상각누계액'][0] = 항목별_테이블[i]['감가상각비'][0]*(j+1)
            항목별_테이블[i]['장부금액'][0] = 항목별_테이블[i]['취득원가'][0] - 항목별_테이블[i]['감가상각누계액'][0]

        elif j >= 1:
            if 항목별_테이블[i]['잔존가치'][0] < 항목별_테이블[i]['장부금액'][j-1]:
                항목별_테이블[i].append(항목 = 항목별_테이블[i]['항목'][0],
                                    취득원가 = 항목별_테이블[i]['취득원가'][0],
                                    감가상각대상금액 = 항목별_테이블[i]['취득원가'][0] -항목별_테이블[i]['잔존가치'][0],
                                    상각률 = 1/항목별_테이블[i]['내용연수'][0],
                                    감가상각비 = 항목별_테이블[i]['감가상각대상금액'][0]*항목별_테이블[i]['상각률'][0],
                                    감가상각누계액 = 항목별_테이블[i]['감가상각비'][0]*(j+1),
                                    장부금액 = 항목별_테이블[i]['취득원가'][0] - 항목별_테이블[i]['감가상각비'][0]*(j+1)
                                    )
                                    
항목별_테이블.set_format(6, "#,###")
항목별_테이블.insert_column(7, "상각률", number)
항목별_테이블.set_format(7, "#.00")
항목별_테이블.insert_column(8, "감가상각비", int)
항목별_테이블.set_format(8, "#,###")
항목별_테이블.insert_column(9, "감가상각누계액", int)
항목별_테이블.set_format(9, "#,###")
항목별_테이블.insert_column(10, "장부금액", int)
항목별_테이블.set_format(10, "#,###")

for i in range(len(항목별_테이블)):
    for j in range(항목별_테이블[i]['내용연수'][0]):
        if j == 0 :
            항목별_테이블[i]['감가상각대상금액'][0] = 항목별_테이블[i]['취득원가'][0]- 항목별_테이블[i]['잔존가치'][0]
            항목별_테이블[i]['상각률'][0] = 1/항목별_테이블[i]['내용연수'][0] 
            항목별_테이블[i]['감가상각비'][0] = 항목별_테이블[i]['감가상각대상금액'][0] * 항목별_테이블[i]['상각률'][0]
            항목별_테이블[i]['감가상각누계액'][0] = 항목별_테이블[i]['감가상각비'][0]*(j+1)
            항목별_테이블[i]['장부금액'][0] = 항목별_테이블[i]['취득원가'][0] - 항목별_테이블[i]['감가상각누계액'][0]

        elif j >= 1:
            if 항목별_테이블[i]['잔존가치'][0] < 항목별_테이블[i]['장부금액'][j-1]:
                항목별_테이블[i].append(항목 = 항목별_테이블[i]['항목'][0],
                                    취득원가 = 항목별_테이블[i]['취득원가'][0],
                                    감가상각대상금액 = 항목별_테이블[i]['취득원
                                    가'][0] -항목별_테이블[i]['잔존가치'][0],
                                    상각률 = 1/항목별_테이블[i]['내용연수'][0],
                                    감가상각비 = 항목별_테이블[i]['감가상각대상금액'][0]*항목별_테이블[i]['상각률'][0],
                                    감가상각누계액 = 항목별_테이블[i]['감가상각비'][0]*(j+1),
                                    장부금액 = 항목별_테이블[i]['취득원가'][0] - 항목별_테이블[i]['감가상각비'][0]*(j+1)
                                    )
                                    
항목별_테이블.insert_column(6, "감가상각대상금액", int)
항목별_테이블.set_format(6, "#,###")
항목별_테이블.insert_column(7, "상각률", number)
항목별_테이블.set_format(7, "#.00")
항목별_테이블.insert_column(8, "감가상각비", int)
항목별_테이블.set_format(8, "#,###")
항목별_테이블.insert_column(9, "감가상각누계액", int)
항목별_테이블.set_format(9, "#,###")
항목별_테이블.insert_column(10, "장부금액", int)
항목별_테이블.set_format(10, "#,###")

for i in range(len(res1)):
    for j in range(len(res1[i])):
    res1[i]["계정코드_1_합계"][j] = sum(res1[i]["계정코드_1"]) 
    res1[i]["계정코드_1_표준편차"][j] = stdev(res1[i]["계정코드_1"]) 
    
for i in range(len(분개장)):
    if 분개장[i]['차변금액'] > 0 :
        분개장[i]['계정코드_1'] = 분개장[i]['계정코드']
    elif 분개장[i]['차변금액'] < 0 :
        분개장[i]['계정코드_1'] = -분개장[i]['계정코드']
    elif 분개장[i]['차변금액'] == 0 and 분개장[i]['대변금액'] > 0:
        분개장[i]['계정코드_1'] = -분개장[i]['계정코드']
    elif 분개장[i]['차변금액'] == 0 and 분개장[i]['대변금액'] < 0:
        분개장[i]['계정코드_1'] = 분개장[i]['계정코드']
    else :
        분개장[i]['계정코드_1'] = 0   
       
for i in range(len(res1)):
    for j in range(len(res1[i])):
        res1[i]['계정코드_1_합계'][j] = sum(res1[i]['계정코드_1']) 
        res1[i]['계정코드_1_표준편차'][j] = stdev(res1[i]['계정코드_1'])
        
for i in range(len(res1)):
    for i in range(len(res1[i])):
        if j == 0 :
            res1[i]['계정코드_1_합계_개수'][j] = 1
        else :
            res1[i]['계정코드_1_합계_개수'][j] = 0
            
for i in range(len(총괄)):
    총괄[i]['S_index'] = i
    
    
    
    
    